#!/bin/bash

# Warn users about missing RethinkDB environment variables.
if [[ -z "${RETHINK_HOST}" || -z "${RETHINK_AUTH_KEY}" ]]
then
    echo -n "RETHINK_HOST or RETHINK_AUTH_KEY are not set. Continue? (Y/N): "
    read should_continue
    if [[ "${should_continue}" != "Y" && "${should_continue}" != "y" ]]
    then
        echo "Aborting"
        exit 1
    fi
fi

# Search user arguments for jobs parameter, -j or --jobs, and provide a default
# value if it isn't supplied.
FOUND_JOBS=0
for ARG in $*
do
    if [[ "${ARG}" = "-j" || "${ARG}" = "--jobs" ]]
    then
        FOUND_JOBS=1
    fi
done

if [[ "${FOUND_JOBS}" -eq "0" ]]
then
    JOBS="-j 1"
else
    JOBS=""
fi

# Use the cluster by default.
USE_CLUSTER=1

# Parse user arguments.
while getopts ":lh" opt; do
    case $opt in
        l)
            # Run jobs locally.
            USE_CLUSTER=0

            # Remove run argument from arguments passed to snakemake.
            shift
            ;;
        h)
            echo "Usage: $0 [-l] [snakemake arguments]"
            echo
            echo "-l: run jobs locally (default: run jobs on cluster)"
            echo "all other arguments are passed through to snakemake"
            echo
            echo "Examples"
            echo "--------"
            echo
            echo "Local run:"
            echo -e "\t./run -l"
            echo "Dry run:"
            echo -e "\t./run -n"
            echo "Run 4 jobs at once:"
            echo -e "\t./run -j 4"
            exit
            ;;
        \?)
            # Stop looking for other arguments if we find an unexpected one.
            break
            ;;
    esac
done

# If there are no cluster submission commands on the PATH, disable cluster
# submission.
if [[ -z "$(which sbatch)" && -z "$(which qsub)"  ]]
then
    USE_CLUSTER=0
fi

# Setup the environment.
. ${HOME}/miniconda3/etc/profile.d/conda.sh
conda activate nextstrain

# Run jobs on the cluster if it is possible and the user did not request a local
# run.
if [[ "${USE_CLUSTER}" -eq "1" ]]
then
    # Run multiple build jobs at a time on the cluster.
    echo "Running on the cluster"
    snakemake --restart-times 3 -w 60 --use-conda --cluster-config config/cluster-gizmo.json --drmaa " -p restart --nodes=1 --ntasks=1 --mem={cluster.memory} --cpus-per-task={cluster.cores} --tmp={cluster.disk} --time={cluster.time}" --jobname "{rulename}.{jobid}.sh" ${JOBS} $*
    #snakemake --restart-times 3 -w 60 --use-conda --cluster-config config/cluster-gizmo.json --cluster "sbatch -p restart --restart --nodes=1 --tasks=1 --mem={cluster.memory} --cpus-per-task={cluster.cores} --tmp={cluster.disk} --time={cluster.time}" ${JOBS} $*
else
    echo "Running locally"
    snakemake -w 60 --use-conda ${JOBS} $*
fi
